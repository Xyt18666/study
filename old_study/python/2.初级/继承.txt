import random as r

class Fish:
	def __init__(self):
		self.x = r.randint(0,10)
		self.y = r.randint(0,10)

	def move(self):
		self.x -= 1
		print(self.x,self.y)

class Yu1(Fish):
	pass

class Yu2(Fish):
	pass

class Yu3(Fish):
	pass

class Yu4(Fish):
	def __init__(self):   这里会报错，因为 子类重写了 init
		
		# Fish.__init__(self)   解决方法 1 ，调用父类方法
	
		super().__init__()    解决方法2,super()函数,不用传入参数

		self.em = true

	def eat(self):
		if self.em:
			print("吃")
			self.em = false
		else:
			
			print("吃吃饱了")

方法 有 2 种 ：
1. 调用未绑定的父类方法


2.使用super()函数，更好用


-----------------------------------------------

多重继承：通过传入多个 类 来实现，但是容易出现bug

class Yu3(Fish1,Fish2):
	pass



